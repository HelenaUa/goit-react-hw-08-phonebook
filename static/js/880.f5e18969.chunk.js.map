{"version":3,"file":"static/js/880.f5e18969.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/GlobalStyle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ListItem/ListItem.styled.jsx","components/ListItem/ListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filters.value;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contactsItems, filter) => {\n    return contactsItems.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n","import { createGlobalStyle } from \"styled-components\";\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\nbody {\n  // margin: 40px 60px;\n  margin: 0 auto;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}`","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormCon = styled(Form)`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\npadding: 15px;\nborder: 1px solid black;\nwidth: 350px;`\n\nexport const Input = styled(Field)`\npadding-left:5px;\nheight:30px;\nborder-radius:6px;\nmax-width:320px;`\n\nexport const Btn = styled.button`\nwidth:110px;\npadding: 4px;\nborder: 1px solid black;\nborder-radius:4px;\nbackground-color: white;\ncursor: pointer;\n&:hover,\n&:focus{\n    background-color: lightgray;\n    border: 1px solid gray;`\n\nexport const LabelStyle = styled.label`\ndisplay:flex;\ngap: 5px;\nflex-direction:column;`    \n","import { nanoid } from 'nanoid';\nimport { Formik, ErrorMessage } from 'formik';\nimport { FormCon, Input, Btn, LabelStyle } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\nexport default function ContactForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onChangeName = e => setName(e.currentTarget.value);\n    const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n \n const handleSubmit = (event) => {\n    //  event.preventDefault();\n     \n     const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n     alert (`${name} is already in contacts`);\n      return;\n     };\n     dispatch(addContact(newContact));\n     setName('');\n     setNumber('');\n    };\n    \n    return (\n        <Formik initialValues={{ name: '', number: '' }}\n            onSubmit={handleSubmit}>\n            <FormCon autoComplete=\"off\">\n                <LabelStyle htmlFor=\"name\">\n                    Name\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={onChangeName}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                    <ErrorMessage name=\"name\" component=\"div\" />\n                </LabelStyle>\n                <LabelStyle htmlFor=\"number\">\n                    Number\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        onChange={onChangeNumber}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                    <ErrorMessage name=\"number\" component=\"div\" />\n                </LabelStyle>\n                <Btn type=\"submit\">Add contact</Btn>\n            </FormCon>\n        </Formik> \n    )\n};\n\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\npadding-left:5px;\nheight:30px;\nborder-radius:6px;\nwidth:320px;`","import { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setStatusFilter } from 'redux/contacts/filtersSlice';\nimport { selectFilterValue } from 'redux/contacts/selectors';\n\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n\n    const onFilter = useSelector(selectFilterValue);\n\n    const onChange = e => {\n        dispatch(setStatusFilter(e.currentTarget.value))\n    };\n\n\n    return (\n        <div>\n            <h3>Find contacts by name</h3>\n            <Input type=\"text\" value={onFilter} onChange={onChange} />\n        </div>\n    )\n};\n","import styled from 'styled-components';\n\nexport const BtnDel = styled.button`\nmargin-left: 20px;\nborder-radius:4px;\nborder: 1px solid gray;\n&:hover,\n&:focus{\n    background-color: lightgray;`","import PropTypes from 'prop-types';\nimport { BtnDel } from './ListItem.styled';\n\n\nexport default function ListItem({ name, number, onDeleteContact }) {\n    \n    return (\n        <li>\n            <span>{name}: </span>\n            <span>{number}</span>\n            <BtnDel type=\"button\" onClick={onDeleteContact}>Delete</BtnDel>\n        </li>\n    )\n};\n\nListItem.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    deleteContact: PropTypes.func,\n};","import ListItem from 'components/ListItem/ListItem';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFiltredContacts } from 'redux/contacts/selectors';\n\n\nexport default function ContactList() {\n\n    const dispatch = useDispatch();\n    \n    const onDelete = (id) => {\n        dispatch(deleteContact(id))\n    };\n\n    const filtredContacts = useSelector(selectFiltredContacts);\n\n    return (\n        <ul style={{ paddingLeft: '20px'}}>\n            {filtredContacts.map(item => {\n                return (\n                    <ListItem key={item.name}\n                        name={item.name}\n                        number={item.number}\n                        onDeleteContact={() => onDelete(item.id)}\n                    />\n                )\n            })}\n        </ul>\n    )\n};\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { GlobalStyle } from 'components/GlobalStyle';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n    dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <HelmetProvider>\n            <Helmet>\n               <title>Your contacts</title>\n            </Helmet>\n            <div>\n               <GlobalStyle />\n               <h1>Phonebook</h1>\n               <ContactForm />\n\n               <h2>Contacts</h2>\n               <Filter />\n               {isLoading && !error && <b>Request in progress...</b>}\n               <ContactList />\n            </div>\n        </HelmetProvider>\n    )\n}\n\n"],"names":["selectContacts","state","contacts","items","selectFilterValue","filters","value","selectIsLoading","isLoading","selectError","error","selectFiltredContacts","createSelector","contactsItems","filter","item","name","toLowerCase","includes","GlobalStyle","createGlobalStyle","FormCon","styled","Form","Input","Field","Btn","LabelStyle","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","initialValues","onSubmit","event","newContact","id","nanoid","some","contact","alert","addContact","autoComplete","htmlFor","type","onChange","e","currentTarget","pattern","title","required","component","Filter","onFilter","setStatusFilter","BtnDel","ListItem","onDeleteContact","onClick","ContactList","filtredContacts","style","paddingLeft","map","deleteContact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}